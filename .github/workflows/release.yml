# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Release

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  release:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Get version for output
        id: version
        run: echo "version=v`cat version/version.txt`" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
  binaries:
    name: Add binaries to Release
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
    - uses: actions/checkout@v3
    - uses: wangyoucao577/go-release-action@v1.30
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        release_tag: ${{needs.release.outputs.version}}
        md5sum: false
        binary_name: stne
        asset_name: go-cli-selfupdate-${{needs.release.outputs.version}}-${{ matrix.goos }}
